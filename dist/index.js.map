{"version":3,"file":"index.js","sources":["../src/random-numbers/JavascriptRandom.ts","../src/parser/Parser.ts","../src/index.ts"],"sourcesContent":["import type {RandomIntegerParamsType} from '../types'\r\n\r\nconst getRandomInclusive = (min: number, max: number): number => Math.floor(Math.random() * (max - min + 1) + min)\r\nexport const getRandomIntegers = ({num = 100, min = 1, max = 20}: RandomIntegerParamsType = {}): number[] => Array.from({length: num}, () => getRandomInclusive(min, max))\r\n","import {getRandomIntegers} from '../random-numbers/JavascriptRandom'\r\n\r\nconst diceRollsCache: Map<string, number[]> = new Map<string, number[]>()\r\n\r\nconst hasCache = (id: string): boolean => diceRollsCache.has(id) && !!diceRollsCache.get(id)?.length\r\nconst addToCache = (id: string, values: number[]): number | undefined => {\r\n  const newValues = [...values]\r\n\r\n  const value = newValues.pop()\r\n  diceRollsCache.set(id, newValues)\r\n\r\n  return value\r\n}\r\nconst getFromCache = (id: string): number | undefined => {\r\n  if (!hasCache(id)) return undefined\r\n\r\n  const values: number[] = [...(diceRollsCache.get(id) || [])]\r\n  const value = values.pop()\r\n\r\n  diceRollsCache.set(id, values)\r\n  return value\r\n}\r\n\r\nexport const getDiceRoll = (dice: number): number => {\r\n  const id = `${dice}`\r\n\r\n  const isCached: boolean = hasCache(id)\r\n  if (isCached) return getFromCache(id) as number\r\n\r\n  const generatedValues: number[] = getRandomIntegers({max: dice})\r\n  return addToCache(id, generatedValues) as number\r\n}\r\n","import {getCacheMap} from './parser/Parser'\r\nimport {getDiceRoll} from './parser/Parser'\r\n\r\n(async () => {\r\n  console.log((await getDiceRoll(20)))\r\n  console.log((await getDiceRoll(20)))\r\n  console.log((await getDiceRoll(20)))\r\n})()\r\n\r\nexport { }\r\n"],"names":["getRandomInclusive","min","max","getRandomIntegers","num","diceRollsCache","hasCache","id","_a","addToCache","values","newValues","value","getFromCache","getDiceRoll","dice","generatedValues"],"mappings":"AAEA,MAAMA,IAAqB,CAACC,GAAaC,MAAwB,KAAK,MAAM,KAAK,OAAA,KAAYA,IAAMD,IAAM,KAAKA,CAAG,GACpGE,IAAoB,CAAC,EAAC,KAAAC,IAAM,KAAK,KAAAH,IAAM,GAAG,KAAAC,IAAM,OAA+B,CAAA,MAAiB,MAAM,KAAK,EAAC,QAAQE,EAAA,GAAM,MAAMJ,EAAmBC,GAAKC,CAAG,CAAC,GCDnKG,wBAA4C,OAE5CC,IAAW,CAACC;ADFlB,MAAAC;ACE0C,SAAAH,EAAe,IAAIE,CAAE,KAAK,CAAC,GAACC,IAAAH,EAAe,IAAIE,CAAE,MAArB,QAAAC,EAAwB;AAAA,GACxFC,IAAa,CAACF,GAAYG,MAAyC;AACjE,QAAAC,IAAY,CAAC,GAAGD,CAAM,GAEtBE,IAAQD,EAAU;AACT,SAAAN,EAAA,IAAIE,GAAII,CAAS,GAEzBC;AACT,GACMC,IAAe,CAACN,MAAmC;AACnD,MAAA,CAACD,EAASC,CAAE;AAAU;AAEpB,QAAAG,IAAmB,CAAC,GAAIL,EAAe,IAAIE,CAAE,KAAK,CAAA,CAAG,GACrDK,IAAQF,EAAO;AAEN,SAAAL,EAAA,IAAIE,GAAIG,CAAM,GACtBE;AACT,GAEaE,IAAc,CAACC,MAAyB;AACnD,QAAMR,IAAK,GAAGQ;AAGV,MADsBT,EAASC,CAAE;AACvB,WAAOM,EAAaN,CAAE;AAEpC,QAAMS,IAA4Bb,EAAkB,EAAC,KAAKY,EAAK,CAAA;AACxD,SAAAN,EAAWF,GAAIS,CAAe;AACvC;AAAA,CC5BC,aACC,QAAQ,IAAK,MAAMF,EAAY,EAAE,CAAE,GACnC,QAAQ,IAAK,MAAMA,EAAY,EAAE,CAAE,GACnC,QAAQ,IAAK,MAAMA,EAAY,EAAE,CAAE,IAClC;"}